SELECT DATE_TRUNC('week', events.occurred_at),
COUNT(DISTINCT events.user_id) AS weekly_active_users
FROM tutorial.yammer_events events
WHERE events.event_type = 'engagement'
AND events.event_name = 'login'
GROUP BY 1
ORDER BY 1

SELECT date_trunc('day',created_at) as day,
COUNT (*) as all_users,
COUNT(case when activated_at IS NOT NULL THEN users.user_id ELSE NULL END) AS activated_users
FROM tutorial.yammer_users users
WHERE created_at >= '2014-06-01'
AND created_at < '2014-09-01'
GROUP BY 1
ORDER BY 1

SELECT DATE_TRUNC('week',x.occurred_at) AS "week",
avg(x.age_at_event) AS "Average age during week",
COUNT(DISTINCT CASE WHEN x.user_age > 70 THEN x.user_id ELSE NULL END) AS "10+ weeks",
COUNT(DISTINCT CASE WHEN x.user_age < 70 AND x.user_age >= 63 THEN x.user_id ELSE NULL END) AS "9 weeks",
COUNT(DISTINCT CASE WHEN x.user_age < 63 AND x.user_age >= 56 THEN x.user_id ELSE NULL END) AS "8 weeks",
COUNT(DISTINCT CASE WHEN x.user_age < 56 AND x.user_age >= 49 THEN x.user_id ELSE NULL END) AS "7 weeks",
COUNT(DISTINCT CASE WHEN x.user_age < 49 AND x.user_age >= 42 THEN x.user_id ELSE NULL END) AS "6 weeks",
COUNT(DISTINCT CASE WHEN x.user_age < 42 AND x.user_age >= 35 THEN x.user_id ELSE NULL END) AS "5 weeks",
COUNT(DISTINCT CASE WHEN x.user_age < 35 AND x.user_age >= 28 THEN x.user_id ELSE NULL END) AS "4 weeks",
COUNT(DISTINCT CASE WHEN x.user_age < 28 AND x.user_age >= 21 THEN x.user_id ELSE NULL END) AS "3 weeks",
COUNT(DISTINCT CASE WHEN x.user_age < 21 AND x.user_age >= 14 THEN x.user_id ELSE NULL END) AS "2 weeks",
COUNT(DISTINCT CASE WHEN x.user_age < 14 AND x.user_age >= 7 THEN x.user_id ELSE NULL END) AS "1 week",
COUNT(DISTINCT CASE WHEN x.user_age < 7 THEN x.user_id ELSE NULL END) AS "Less than a week"
  FROM ( SELECT events.occurred_at, users.user_id, DATE_TRUNC('week',users.activated_at) AS activation_week,
EXTRACT('day' FROM events.occurred_at - users.activated_at) AS age_at_event,
EXTRACT('day' FROM '2014-09-01'::TIMESTAMP - users.activated_at) AS user_age
FROM tutorial.yammer_users users
JOIN tutorial.yammer_events events
ON events.user_id = users.user_id
AND events.event_type = 'engagement'
AND events.event_name = 'login'
AND events.occurred_at >= '2014-05-01'
AND events.occurred_at < '2014-09-01'
WHERE users.activated_at IS NOT NULL
 ) x
GROUP BY 1
 ORDER BY 1
/* From the graph we can see that the problem is particular to older users,
therefore we can say that it is not a one time hike. Looking into the type of device to see if there's
any particular product that gives an anomaly*/

SELECT DATE_TRUNC('week', occurred_at) AS week,
COUNT(DISTINCT events.user_id) AS weekly_active_users,
COUNT(DISTINCT CASE WHEN events.device IN ('macbook pro','lenovo thinkpad','macbook air','dell inspiron notebook',
'asus chromebook','dell inspiron desktop','acer aspire notebook','hp pavilion desktop','acer aspire desktop','mac mini')
THEN events.user_id ELSE NULL END) AS computer,
COUNT(DISTINCT CASE WHEN events.device IN ('iphone 5','samsung galaxy s4','nexus 5','iphone 5s','iphone 4s','nokia lumia 635',
'htc one','samsung galaxy note','amazon fire phone') THEN events.user_id ELSE NULL END) AS phone,
COUNT(DISTINCT CASE WHEN events.device IN ('ipad air','nexus 7','ipad mini','nexus 10','kindle fire','windows surface',
'samsumg galaxy tablet') THEN events.user_id ELSE NULL END) AS tablet

FROM tutorial.yammer_events events
WHERE events.event_type = 'engagement'
AND events.event_name = 'login'
 
GROUP BY 1
ORDER BY 1
/* Now by looking at the graph for the devices, we can see that phone devices is where the 
drop is. Which may mean that maybe there's some issue with the mobile apps or maybe some other issue. 
Since email events are our main focus, we look into the email events to get more clarity*/


SELECT DATE_TRUNC('week', occurred_at) AS week,
COUNT(CASE WHEN emails.action = 'sent_weekly_digest' THEN emails.user_id ELSE NULL END) AS weekly_emails,
COUNT(CASE WHEN emails.action = 'sent_reengagement_email' THEN emails.user_id ELSE NULL END) AS reengagement_emails,
COUNT(CASE WHEN emails.action = 'email_open' THEN emails.user_id ELSE NULL END) AS email_opens,
COUNT(CASE WHEN emails.action = 'email_clickthrough' THEN emails.user_id ELSE NULL END) AS email_clickthroughs
FROM tutorial.yammer_emails emails
GROUP BY 1
ORDER BY 1

/* From the graph that shows weekly email actions, we can see that the clickthroughs are much lesser than the
others. So we can identify that the problem of drop in user engagement is related to email actions on mobile phone.
Question:If they are questions that you canâ€™t answer using data alone, how would you go about answering them?
Answer: The exact reason as to why there's a dip can't be known from the data itself for that ne has to let
the concerned department know and ask them to look into it and dive deeper to figure out the actual reason.*/
